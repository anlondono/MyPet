<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>接受</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误!</value>
  </data>
  <data name="CheckConection" xml:space="preserve">
    <value>检查网络连接</value>
  </data>
  <data name="EmailorPassword" xml:space="preserve">
    <value>邮箱或密码错误</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>確認一下</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="CheckConnection" xml:space="preserve">
    <value>检查网络连接</value>
  </data>
  <data name="NewPet" xml:space="preserve">
    <value>宠物</value>
  </data>
  <data name="GettingPetTypes" xml:space="preserve">
    <value>获取宠物类型列表，请稍后再试！</value>
  </data>
  <data name="Wherepicturefrom" xml:space="preserve">
    <value>您想从哪里获得图片？</value>
  </data>
  <data name="FromGallery" xml:space="preserve">
    <value>地道</value>
  </data>
  <data name="FromCamera" xml:space="preserve">
    <value>从照相机</value>
  </data>
  <data name="EnteranEmail" xml:space="preserve">
    <value>你需要输入你的邮箱</value>
  </data>
  <data name="EnteraPassword" xml:space="preserve">
    <value>必须输入密码。</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>详细信息</value>
  </data>
  <data name="Pets" xml:space="preserve">
    <value>宠物</value>
  </data>
  <data name="PetsAvailable" xml:space="preserve">
    <value>宠物出售</value>
  </data>
  <data name="EnteraDocument" xml:space="preserve">
    <value>您必须输入文件！</value>
  </data>
  <data name="EnteraName" xml:space="preserve">
    <value>- 必须输入名字</value>
  </data>
  <data name="EnterLastName" xml:space="preserve">
    <value>- 必须输入姓氏</value>
  </data>
  <data name="EnterAddress" xml:space="preserve">
    <value>必须输入地址。</value>
  </data>
  <data name="EenterValidEmail" xml:space="preserve">
    <value>您必须输入有效的电子邮件地址</value>
  </data>
  <data name="EnteraPhonenumber" xml:space="preserve">
    <value>您必须输入电话号码！</value>
  </data>
  <data name="SelectaRole" xml:space="preserve">
    <value>必须选择角色。</value>
  </data>
  <data name="PasswordCharacteres" xml:space="preserve">
    <value>密码长度必须至少为6个字符！</value>
  </data>
  <data name="EnteraPasswordConfirm" xml:space="preserve">
    <value>您必须输入密码。</value>
  </data>
  <data name="PasswordandConfirmDoesNotMatch" xml:space="preserve">
    <value>密码确认不匹配。</value>
  </data>
  <data name="RemembePassword" xml:space="preserve">
    <value>记住密码</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>电子邮件</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="ForgotyourPassword" xml:space="preserve">
    <value>忘记了密码?</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>注册...</value>
  </data>
  <data name="EditPet" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="BigproblemCallSupport" xml:space="preserve">
    <value>该用户有大问题，请致电支持。</value>
  </data>
  <data name="MyPets" xml:space="preserve">
    <value>我的</value>
  </data>
  <data name="ModifyProfile" xml:space="preserve">
    <value>修改资料</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>注销</value>
  </data>
  <data name="SuccessfulRequest" xml:space="preserve">
    <value>成功的请求</value>
  </data>
  <data name="SelectHousing" xml:space="preserve">
    <value>选择住房类型！</value>
  </data>
  <data name="RegisterNewUser" xml:space="preserve">
    <value>注册新用户为</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>文档</value>
  </data>
</root>